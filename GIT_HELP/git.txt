$ ls -lA 把隐藏的文件也列出来
$ ls  列出所有文件名
$ ls -l 以表的形式列出所有文件的详情信息
$ mkdir 文件夹
$ cd 文件夹 进入文件夹内
$ git init 初始化git仓库
$ pwd 显示文件夹路径
项目级别/仓库级别：仅在当前本地库范围内有效
git config user.name tom_pro
git config user.email goodMorning_pro@atguigu.com
系统用户级别：登陆当前操作系统的用户范围
git config --global user.name tom_pro
git config -global user.emil goodMorning_pro@atguigu.com

git cat file 命令显示版本库对象的内容、类型及大小信息。
cat ~/.gitconfig  
set nu 显示vim行号
git add 
git commit -m "" 文件.后缀名
git log			显示的最完整
git log --pretty=online       索引值全显 简洁一些
git log --oneline                 索引 显示一部分 更简介一些
git reflog 		在上一个命令之上添加了移动指针需要的步数
多屏显示操控方式：
空格向下翻页
b向上翻页
q退出
git reset --hard 索引值
tail -n 3 文件名.后缀名         显示文件的后三行
git reset --hard HEAD^^^   退后历史版本三次
git reset --hard HEAD~3     退后历史版本三次
rm  文件名.后缀名 		删除文件


git branch -v   查看所有分支
git branch name 新建一个以name为名字的分支
git checkout name 切换分支
git merge 分支名   合并分支名
Ctrl+l清屏
git remote -v
git remote add MyRepository https://github.com/CAmateur/MyRepository.git
git fetch MyRepository master
git merge MyRepository/master
mkdir dir1 创建一个叫做 'dir1' 的目录' 
mkdir dir1 dir2 同时创建两个目录 
mkdir -p /tmp/dir1/dir2 创建一个目录树 
rm -f file1 删除一个叫做 'file1' 的文件' 
rmdir dir1 删除一个叫做 'dir1' 的目录' 
rm -rf dir1 删除一个叫做 'dir1' 的目录并同时删除其内容 
rm -rf dir1 dir2 同时删除两个目录及它们的内容 

ssh-keygen -t rsa -C 邮箱
$ rm -r .ssh
出现push错误
git pull --rebase origin master
git branch -d  分支名      删除分支
git push origin --delete 分支名   删除远程分支名 

git rm -r --cached a/2.txt //删除a目录下的2.txt文件   删除a目录git rm -r --cached a

git commit -m "删除a目录下的2.txt文件" 

git push

 git add -A  提交所有变化

git add -u  提交被修改(modified)和被删除(deleted)文件，不包括新文件(new)

git add .  提交新文件(new)和被修改(modified)文件，不包括被删除(deleted)文件

1、撤掉


a、如果还没 git add file ，使用该指令进行撤销：  git checkout -- fileName  
b、如果已经git add file  ， 但是没有 git commit -m ""  分两步操作：
	b-1、git reset HEAD readme.txt
	b-2、git  status
	b-3、git checkout -- file
c、如果已经git add file 并且已经 git commit ,那么回退版本办法是：
	c-1、通过 git log 或者 git log --pretty=oneline 、git reflog
	c-2、找到对应的commit id进行回退：git reset --hard 1094a


2、删除

现在你有两个选择，一是确实要从版本库中删除该文件，那就用命令git rm删掉，并且git commit：
a、git rm test.txt
b、git commit -m "remove test.txt"


另一种情况是删错了，因为版本库里还有呢，所以可以很轻松地把误删的文件恢复到最新版本：
git checkout -- test.txt 
